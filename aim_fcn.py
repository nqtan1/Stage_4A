import numpy as np
import scipy.linalg

def AimFcn(x):
    cas_test = np.array([
        4.0778, 26.3836, 74.3671, 148.0648, 244.2726, 359.9562, 504.1454, 667.1988, 848.3120
    ])
    #print(cas_test.shape)
    CAS100 = np.array([ 
        4.32151654462511e+000, 4.24085155274255e+000, 4.3092, 4.2145, 4.3060, 4.2985, 4.2834, 4.2978, 4.2834,
        27.0824894175550e+000, 26.6417901126090e+000, 27.0228, 26.5645, 27.0260, 27.0080, 26.9600, 26.9976, 26.9600,
        75.8317564931576e+000, 74.7455988318025e+000, 75.6294, 74.1237, 75.7490, 75.7375, 75.6798, 75.7093, 75.6798,
        148.599988340571e+000, 146.739951731454e+000, 148.3432, 146.5304, 148.5350, 148.5350, 148.5044, 148.5074, 148.5044,
        245.646471409934e+000, 242.969721573817e+000, 245.2392, 242.2402, 245.6150, 245.5818, 245.5644, 245.6082, 245.5644,
        0, 0, 0, 0, 0, 366.7552, 366.6613, 366.9050, 366.6613,
        0, 0, 0, 0, 0, 511.9844, 511.6595, 512.2945, 511.6595,
        0, 0, 0, 0, 0, 681.2793, 680.5560, 681.6971, 680.5560,
        0, 0, 0, 0, 0, 874.7401, 873.5121, 875.0962, 873.5121
    ])
    #print(CAS100.shape)
    CAS10 = np.array([
        4.3215,  4.1911,  3.8404,  3.8585,  3.8476,
	    27.0834, 26.9518, 24.7820, 26.4102, 26.1461,
	    75.8511, 75.6864, 69.9763, 74.4779, 74.3531,
	    148.7416,147.3375,142.3766,143.6711,142.5531,
	    246.2656,242.5484,224.6341,233.2063,232.3888
    ])
    #print(CAS10.shape)
    CAS20 = np.array([
        4.3215, 4.2371, 4.2834, 4.3033, 4.3180, 4.3180, 4.3125, 4.3190, 4.3160,
        27.0825, 26.8149, 26.9600, 27.0238, 27.0712, 27.0712, 27.0656, 27.0816, 27.0769,
        75.8330, 75.5030, 75.6811, 75.7599, 75.8188, 75.8188, 75.8121, 75.8272, 75.8263,
        148.6093, 148.4002, 148.5137, 148.5634, 148.6004, 148.6004, 148.5407, 148.5617, 148.5497,
        245.6880, 245.5035, 245.6060, 245.6492, 245.6806, 245.6806, 245.5164, 245.5851, 245.5239,
        0, 0, 0, 0, 0, 0, 366.8240, 366.9895, 366.8504,
        0, 0, 0, 0, 0, 0, 512.5700, 512.8491, 512.6486,
        0, 0, 0, 0, 0, 0, 682.8004, 683.1669, 682.9657,
        0, 0, 0, 0, 0, 0, 877.6179, 878.0366, 877.891
    ])
    #print(CAS20.shape)
    CAS30 = np.array([
        0, 4.2603, 4.2940, 4.3084, 4.3190, 4.0910, 4.2940, 4.3190,
        0, 26.8307, 26.9680, 27.0277, 27.0719, 26.1829, 26.9679, 27.0719,
        0, 75.3824, 75.6260, 75.7331, 75.8128, 74.2600, 75.6230, 75.8126,
        0, 148.0979, 148.3698, 148.4902, 148.5802, 146.7314, 148.3505, 148.5784,
        0, 245.2362, 245.4621, 245.5621, 245.6367, 243.5516, 245.3866, 245.6299,
        0, 0, 0, 0, 0, 0, 366.6379, 366.9495,
        0, 0, 0, 0, 0, 0, 511.9938, 512.5418,
        0, 0, 0, 0, 0, 0, 681.3393, 682.4193,
        0, 0, 0, 0, 0, 0, 874.5964, 876.6112
    ])
    #print(CAS30.shape)
    RDM6 = np.array([
        4.2834, 26.9600, 75.6798, 148.5044, 245.5644, 366.6613, 511.6595, 680.5560, 873.5121
    ])  
    #print(RDM6.shape)
    # SELECTION DU CAS
    nbElements = 30
    precision = 4
    Fref = cas_test  # 1 sans d√©faut
    nbcapteur = 9
    Fref = Fref[:nbcapteur]
    nbre_deg_noeud = 2
    nb_noeuds = nbElements + 1
    
    Eyoung = 182.051e9
    L_tot = 1
    rho = 7850
    h = 0.00545
    b = 0.0249
    S = b * h
    I = (b * h ** 3) / 12
    L = L_tot / nbElements
    
    E = Eyoung * (1 - x)
    Ke2 = (I / L ** 3) * np.array([
        [12, 6 * L, -12, 6 * L],
        [6 * L, 4 * L ** 2, -6 * L, 2 * L ** 2],
        [-12, -6 * L, 12, -6 * L],
        [6 * L, 2 * L ** 2, -6 * L, 4 * L ** 2]
    ])
    
    Me = (rho * S * L / 420) * np.array([
        [156, 22 * L, 54, -13 * L],
        [22 * L, 4 * L ** 2, 13 * L, -3 * L ** 2],
        [54, 13 * L, 156, -22 * L],
        [-13 * L, -3 * L ** 2, -22 * L, 4 * L ** 2]
    ])
    
    sizeKe_totale = nbre_deg_noeud * nb_noeuds
    K_rigidite = np.zeros((sizeKe_totale, sizeKe_totale))
    M_masse = np.zeros((sizeKe_totale, sizeKe_totale))
    
    for j in range(nbElements):
        Ke = E[j] * Ke2
        Ke_totale = np.zeros((sizeKe_totale, sizeKe_totale))
        Me_totale = np.zeros((sizeKe_totale, sizeKe_totale))
        
        for k in range(4):
            for n in range(4):
                Ke_totale[n + j * nbre_deg_noeud, k + j * nbre_deg_noeud] = Ke[n, k]
                Me_totale[n + j * nbre_deg_noeud, k + j * nbre_deg_noeud] = Me[n, k]
        
        K_rigidite += Ke_totale
        M_masse += Me_totale
    
    K_rigidite = K_rigidite[2:, 2:]
    M_masse = M_masse[2:, 2:]
    
    Val_prop, Vect_prop = scipy.linalg.eig(K_rigidite, M_masse)
    Vect_prop = np.real(Vect_prop)
    Val_prop = np.real(Val_prop)
    Indice = np.argsort(Val_prop)
    Val_prop_Range = Val_prop[Indice]
    Vect_prop_range = Vect_prop[:, Indice]
    
    Puls_prop = np.sqrt(Val_prop_Range)
    freqHz = Puls_prop / (2 * np.pi)
    
    freqHzz = freqHz[:nbcapteur]
    freqHzz = np.round(freqHzz, decimals=precision)
    
    err = np.sum(((Fref ** 2 - freqHzz ** 2) / (Fref ** 2)) ** 2)
    
    return err
